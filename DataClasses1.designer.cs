#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="administrator")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCashInHand(CashInHand instance);
    partial void UpdateCashInHand(CashInHand instance);
    partial void DeleteCashInHand(CashInHand instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertInnCash(InnCash instance);
    partial void UpdateInnCash(InnCash instance);
    partial void DeleteInnCash(InnCash instance);
    partial void InsertOutCash(OutCash instance);
    partial void UpdateOutCash(OutCash instance);
    partial void DeleteOutCash(OutCash instance);
    partial void InsertTabMyInfo(TabMyInfo instance);
    partial void UpdateTabMyInfo(TabMyInfo instance);
    partial void DeleteTabMyInfo(TabMyInfo instance);
    partial void InsertTabMyInv(TabMyInv instance);
    partial void UpdateTabMyInv(TabMyInv instance);
    partial void DeleteTabMyInv(TabMyInv instance);
    partial void InsertTable(Table instance);
    partial void UpdateTable(Table instance);
    partial void DeleteTable(Table instance);
    partial void InsertTabMyUser(TabMyUser instance);
    partial void UpdateTabMyUser(TabMyUser instance);
    partial void DeleteTabMyUser(TabMyUser instance);
    partial void InsertTabMyUse(TabMyUse instance);
    partial void UpdateTabMyUse(TabMyUse instance);
    partial void DeleteTabMyUse(TabMyUse instance);
    partial void InsertEEmployee(EEmployee instance);
    partial void UpdateEEmployee(EEmployee instance);
    partial void DeleteEEmployee(EEmployee instance);
    partial void InsertManagementEEmployee(ManagementEEmployee instance);
    partial void UpdateManagementEEmployee(ManagementEEmployee instance);
    partial void DeleteManagementEEmployee(ManagementEEmployee instance);
    partial void InsertLabour(Labour instance);
    partial void UpdateLabour(Labour instance);
    partial void DeleteLabour(Labour instance);
    partial void InsertManagementLLabour(ManagementLLabour instance);
    partial void UpdateManagementLLabour(ManagementLLabour instance);
    partial void DeleteManagementLLabour(ManagementLLabour instance);
    partial void InsertTabMyCus(TabMyCus instance);
    partial void UpdateTabMyCus(TabMyCus instance);
    partial void DeleteTabMyCus(TabMyCus instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsFormsApplication2.Properties.Settings.Default.administratorConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CashInHand> CashInHands
		{
			get
			{
				return this.GetTable<CashInHand>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<InnCash> InnCashes
		{
			get
			{
				return this.GetTable<InnCash>();
			}
		}
		
		public System.Data.Linq.Table<OutCash> OutCashes
		{
			get
			{
				return this.GetTable<OutCash>();
			}
		}
		
		public System.Data.Linq.Table<person> persons
		{
			get
			{
				return this.GetTable<person>();
			}
		}
		
		public System.Data.Linq.Table<TabMyInfo> TabMyInfos
		{
			get
			{
				return this.GetTable<TabMyInfo>();
			}
		}
		
		public System.Data.Linq.Table<TabMyInv> TabMyInvs
		{
			get
			{
				return this.GetTable<TabMyInv>();
			}
		}
		
		public System.Data.Linq.Table<Table> Tables
		{
			get
			{
				return this.GetTable<Table>();
			}
		}
		
		public System.Data.Linq.Table<TabMyUser> TabMyUsers
		{
			get
			{
				return this.GetTable<TabMyUser>();
			}
		}
		
		public System.Data.Linq.Table<TabMyUse> TabMyUses
		{
			get
			{
				return this.GetTable<TabMyUse>();
			}
		}
		
		public System.Data.Linq.Table<EEmployee> EEmployees
		{
			get
			{
				return this.GetTable<EEmployee>();
			}
		}
		
		public System.Data.Linq.Table<ManagementEEmployee> ManagementEEmployees
		{
			get
			{
				return this.GetTable<ManagementEEmployee>();
			}
		}
		
		public System.Data.Linq.Table<Labour> Labours
		{
			get
			{
				return this.GetTable<Labour>();
			}
		}
		
		public System.Data.Linq.Table<ManagementLLabour> ManagementLLabours
		{
			get
			{
				return this.GetTable<ManagementLLabour>();
			}
		}
		
		public System.Data.Linq.Table<TabMyCus> TabMyCus
		{
			get
			{
				return this.GetTable<TabMyCus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashInHand")]
	public partial class CashInHand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CIHID;
		
		private System.Nullable<int> _TotalsAmount;
		
		private System.Nullable<double> _LabourPayment;
		
		private System.Nullable<double> _PerdayExpence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIHIDChanging(int value);
    partial void OnCIHIDChanged();
    partial void OnTotalsAmountChanging(System.Nullable<int> value);
    partial void OnTotalsAmountChanged();
    partial void OnLabourPaymentChanging(System.Nullable<double> value);
    partial void OnLabourPaymentChanged();
    partial void OnPerdayExpenceChanging(System.Nullable<double> value);
    partial void OnPerdayExpenceChanged();
    #endregion
		
		public CashInHand()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CIHID
		{
			get
			{
				return this._CIHID;
			}
			set
			{
				if ((this._CIHID != value))
				{
					this.OnCIHIDChanging(value);
					this.SendPropertyChanging();
					this._CIHID = value;
					this.SendPropertyChanged("CIHID");
					this.OnCIHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalsAmount", DbType="Int")]
		public System.Nullable<int> TotalsAmount
		{
			get
			{
				return this._TotalsAmount;
			}
			set
			{
				if ((this._TotalsAmount != value))
				{
					this.OnTotalsAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalsAmount = value;
					this.SendPropertyChanged("TotalsAmount");
					this.OnTotalsAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourPayment", DbType="Float")]
		public System.Nullable<double> LabourPayment
		{
			get
			{
				return this._LabourPayment;
			}
			set
			{
				if ((this._LabourPayment != value))
				{
					this.OnLabourPaymentChanging(value);
					this.SendPropertyChanging();
					this._LabourPayment = value;
					this.SendPropertyChanged("LabourPayment");
					this.OnLabourPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerdayExpence", DbType="Float")]
		public System.Nullable<double> PerdayExpence
		{
			get
			{
				return this._PerdayExpence;
			}
			set
			{
				if ((this._PerdayExpence != value))
				{
					this.OnPerdayExpenceChanging(value);
					this.SendPropertyChanging();
					this._PerdayExpence = value;
					this.SendPropertyChanged("PerdayExpence");
					this.OnPerdayExpenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractorId;
		
		private string _ContractorName;
		
		private string _SideId;
		
		private System.Nullable<long> _DealAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractorIdChanging(int value);
    partial void OnContractorIdChanged();
    partial void OnContractorNameChanging(string value);
    partial void OnContractorNameChanged();
    partial void OnSideIdChanging(string value);
    partial void OnSideIdChanged();
    partial void OnDealAmountChanging(System.Nullable<long> value);
    partial void OnDealAmountChanged();
    #endregion
		
		public Contract()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorName", DbType="NVarChar(50)")]
		public string ContractorName
		{
			get
			{
				return this._ContractorName;
			}
			set
			{
				if ((this._ContractorName != value))
				{
					this.OnContractorNameChanging(value);
					this.SendPropertyChanging();
					this._ContractorName = value;
					this.SendPropertyChanged("ContractorName");
					this.OnContractorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SideId", DbType="NVarChar(50)")]
		public string SideId
		{
			get
			{
				return this._SideId;
			}
			set
			{
				if ((this._SideId != value))
				{
					this.OnSideIdChanging(value);
					this.SendPropertyChanging();
					this._SideId = value;
					this.SendPropertyChanged("SideId");
					this.OnSideIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealAmount", DbType="BigInt")]
		public System.Nullable<long> DealAmount
		{
			get
			{
				return this._DealAmount;
			}
			set
			{
				if ((this._DealAmount != value))
				{
					this.OnDealAmountChanging(value);
					this.SendPropertyChanging();
					this._DealAmount = value;
					this.SendPropertyChanged("DealAmount");
					this.OnDealAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InnCash")]
	public partial class InnCash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CIID;
		
		private System.Nullable<int> _CashTotals;
		
		private string _CashComes;
		
		private System.Nullable<double> _CashNet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIIDChanging(int value);
    partial void OnCIIDChanged();
    partial void OnCashTotalsChanging(System.Nullable<int> value);
    partial void OnCashTotalsChanged();
    partial void OnCashComesChanging(string value);
    partial void OnCashComesChanged();
    partial void OnCashNetChanging(System.Nullable<double> value);
    partial void OnCashNetChanged();
    #endregion
		
		public InnCash()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CIID
		{
			get
			{
				return this._CIID;
			}
			set
			{
				if ((this._CIID != value))
				{
					this.OnCIIDChanging(value);
					this.SendPropertyChanging();
					this._CIID = value;
					this.SendPropertyChanged("CIID");
					this.OnCIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTotals", DbType="Int")]
		public System.Nullable<int> CashTotals
		{
			get
			{
				return this._CashTotals;
			}
			set
			{
				if ((this._CashTotals != value))
				{
					this.OnCashTotalsChanging(value);
					this.SendPropertyChanging();
					this._CashTotals = value;
					this.SendPropertyChanged("CashTotals");
					this.OnCashTotalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashComes", DbType="NVarChar(50)")]
		public string CashComes
		{
			get
			{
				return this._CashComes;
			}
			set
			{
				if ((this._CashComes != value))
				{
					this.OnCashComesChanging(value);
					this.SendPropertyChanging();
					this._CashComes = value;
					this.SendPropertyChanged("CashComes");
					this.OnCashComesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashNet", DbType="Float")]
		public System.Nullable<double> CashNet
		{
			get
			{
				return this._CashNet;
			}
			set
			{
				if ((this._CashNet != value))
				{
					this.OnCashNetChanging(value);
					this.SendPropertyChanging();
					this._CashNet = value;
					this.SendPropertyChanged("CashNet");
					this.OnCashNetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutCash")]
	public partial class OutCash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COID;
		
		private System.Nullable<int> _CashTotals;
		
		private string _CashGos;
		
		private string _CashNets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOIDChanging(int value);
    partial void OnCOIDChanged();
    partial void OnCashTotalsChanging(System.Nullable<int> value);
    partial void OnCashTotalsChanged();
    partial void OnCashGosChanging(string value);
    partial void OnCashGosChanged();
    partial void OnCashNetsChanging(string value);
    partial void OnCashNetsChanged();
    #endregion
		
		public OutCash()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COID
		{
			get
			{
				return this._COID;
			}
			set
			{
				if ((this._COID != value))
				{
					this.OnCOIDChanging(value);
					this.SendPropertyChanging();
					this._COID = value;
					this.SendPropertyChanged("COID");
					this.OnCOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTotals", DbType="Int")]
		public System.Nullable<int> CashTotals
		{
			get
			{
				return this._CashTotals;
			}
			set
			{
				if ((this._CashTotals != value))
				{
					this.OnCashTotalsChanging(value);
					this.SendPropertyChanging();
					this._CashTotals = value;
					this.SendPropertyChanged("CashTotals");
					this.OnCashTotalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashGos", DbType="NVarChar(50)")]
		public string CashGos
		{
			get
			{
				return this._CashGos;
			}
			set
			{
				if ((this._CashGos != value))
				{
					this.OnCashGosChanging(value);
					this.SendPropertyChanging();
					this._CashGos = value;
					this.SendPropertyChanged("CashGos");
					this.OnCashGosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashNets", DbType="NVarChar(50)")]
		public string CashNets
		{
			get
			{
				return this._CashNets;
			}
			set
			{
				if ((this._CashNets != value))
				{
					this.OnCashNetsChanging(value);
					this.SendPropertyChanging();
					this._CashNets = value;
					this.SendPropertyChanged("CashNets");
					this.OnCashNetsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.person")]
	public partial class person
	{
		
		private string _personadmin;
		
		private string _passwordadmin;
		
		private string _personemail;
		
		private string _personphone;
		
		public person()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personadmin", DbType="VarChar(50)")]
		public string personadmin
		{
			get
			{
				return this._personadmin;
			}
			set
			{
				if ((this._personadmin != value))
				{
					this._personadmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordadmin", DbType="VarChar(50)")]
		public string passwordadmin
		{
			get
			{
				return this._passwordadmin;
			}
			set
			{
				if ((this._passwordadmin != value))
				{
					this._passwordadmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personemail", DbType="VarChar(50)")]
		public string personemail
		{
			get
			{
				return this._personemail;
			}
			set
			{
				if ((this._personemail != value))
				{
					this._personemail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personphone", DbType="VarChar(50)")]
		public string personphone
		{
			get
			{
				return this._personphone;
			}
			set
			{
				if ((this._personphone != value))
				{
					this._personphone = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabMyInfo")]
	public partial class TabMyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDInfo;
		
		private string _NameInfo;
		
		private string _AddressInfo;
		
		private System.Nullable<double> _AgeInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDInfoChanging(int value);
    partial void OnIDInfoChanged();
    partial void OnNameInfoChanging(string value);
    partial void OnNameInfoChanged();
    partial void OnAddressInfoChanging(string value);
    partial void OnAddressInfoChanged();
    partial void OnAgeInfoChanging(System.Nullable<double> value);
    partial void OnAgeInfoChanged();
    #endregion
		
		public TabMyInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInfo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDInfo
		{
			get
			{
				return this._IDInfo;
			}
			set
			{
				if ((this._IDInfo != value))
				{
					this.OnIDInfoChanging(value);
					this.SendPropertyChanging();
					this._IDInfo = value;
					this.SendPropertyChanged("IDInfo");
					this.OnIDInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameInfo", DbType="NVarChar(50)")]
		public string NameInfo
		{
			get
			{
				return this._NameInfo;
			}
			set
			{
				if ((this._NameInfo != value))
				{
					this.OnNameInfoChanging(value);
					this.SendPropertyChanging();
					this._NameInfo = value;
					this.SendPropertyChanged("NameInfo");
					this.OnNameInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressInfo", DbType="NVarChar(50)")]
		public string AddressInfo
		{
			get
			{
				return this._AddressInfo;
			}
			set
			{
				if ((this._AddressInfo != value))
				{
					this.OnAddressInfoChanging(value);
					this.SendPropertyChanging();
					this._AddressInfo = value;
					this.SendPropertyChanged("AddressInfo");
					this.OnAddressInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeInfo", DbType="Float")]
		public System.Nullable<double> AgeInfo
		{
			get
			{
				return this._AgeInfo;
			}
			set
			{
				if ((this._AgeInfo != value))
				{
					this.OnAgeInfoChanging(value);
					this.SendPropertyChanging();
					this._AgeInfo = value;
					this.SendPropertyChanged("AgeInfo");
					this.OnAgeInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabMyInv")]
	public partial class TabMyInv : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDInv;
		
		private string _NameInv;
		
		private string _CompanyInv;
		
		private double _PhoneInv;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDInvChanging(int value);
    partial void OnIDInvChanged();
    partial void OnNameInvChanging(string value);
    partial void OnNameInvChanged();
    partial void OnCompanyInvChanging(string value);
    partial void OnCompanyInvChanged();
    partial void OnPhoneInvChanging(double value);
    partial void OnPhoneInvChanged();
    #endregion
		
		public TabMyInv()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInv", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDInv
		{
			get
			{
				return this._IDInv;
			}
			set
			{
				if ((this._IDInv != value))
				{
					this.OnIDInvChanging(value);
					this.SendPropertyChanging();
					this._IDInv = value;
					this.SendPropertyChanged("IDInv");
					this.OnIDInvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameInv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameInv
		{
			get
			{
				return this._NameInv;
			}
			set
			{
				if ((this._NameInv != value))
				{
					this.OnNameInvChanging(value);
					this.SendPropertyChanging();
					this._NameInv = value;
					this.SendPropertyChanged("NameInv");
					this.OnNameInvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyInv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyInv
		{
			get
			{
				return this._CompanyInv;
			}
			set
			{
				if ((this._CompanyInv != value))
				{
					this.OnCompanyInvChanging(value);
					this.SendPropertyChanging();
					this._CompanyInv = value;
					this.SendPropertyChanged("CompanyInv");
					this.OnCompanyInvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneInv", DbType="Float NOT NULL")]
		public double PhoneInv
		{
			get
			{
				return this._PhoneInv;
			}
			set
			{
				if ((this._PhoneInv != value))
				{
					this.OnPhoneInvChanging(value);
					this.SendPropertyChanging();
					this._PhoneInv = value;
					this.SendPropertyChanged("PhoneInv");
					this.OnPhoneInvChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tables")]
	public partial class Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PictureId;
		
		private string _Name;
		
		private System.Data.Linq.Binary _UserPic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPictureIdChanging(int value);
    partial void OnPictureIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserPicChanging(System.Data.Linq.Binary value);
    partial void OnUserPicChanged();
    #endregion
		
		public Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PictureId
		{
			get
			{
				return this._PictureId;
			}
			set
			{
				if ((this._PictureId != value))
				{
					this.OnPictureIdChanging(value);
					this.SendPropertyChanging();
					this._PictureId = value;
					this.SendPropertyChanged("PictureId");
					this.OnPictureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPic", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserPic
		{
			get
			{
				return this._UserPic;
			}
			set
			{
				if ((this._UserPic != value))
				{
					this.OnUserPicChanging(value);
					this.SendPropertyChanging();
					this._UserPic = value;
					this.SendPropertyChanged("UserPic");
					this.OnUserPicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabMyUser")]
	public partial class TabMyUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _NameUser;
		
		private string _PasswordUser;
		
		private string _Name;
		
		private System.Data.Linq.Binary _UserPic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameUserChanging(string value);
    partial void OnNameUserChanged();
    partial void OnPasswordUserChanging(string value);
    partial void OnPasswordUserChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserPicChanging(System.Data.Linq.Binary value);
    partial void OnUserPicChanged();
    #endregion
		
		public TabMyUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameUser", DbType="NVarChar(50)")]
		public string NameUser
		{
			get
			{
				return this._NameUser;
			}
			set
			{
				if ((this._NameUser != value))
				{
					this.OnNameUserChanging(value);
					this.SendPropertyChanging();
					this._NameUser = value;
					this.SendPropertyChanged("NameUser");
					this.OnNameUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordUser", DbType="NVarChar(50)")]
		public string PasswordUser
		{
			get
			{
				return this._PasswordUser;
			}
			set
			{
				if ((this._PasswordUser != value))
				{
					this.OnPasswordUserChanging(value);
					this.SendPropertyChanging();
					this._PasswordUser = value;
					this.SendPropertyChanged("PasswordUser");
					this.OnPasswordUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPic", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserPic
		{
			get
			{
				return this._UserPic;
			}
			set
			{
				if ((this._UserPic != value))
				{
					this.OnUserPicChanging(value);
					this.SendPropertyChanging();
					this._UserPic = value;
					this.SendPropertyChanged("UserPic");
					this.OnUserPicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabMyUse")]
	public partial class TabMyUse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FNameUse;
		
		private string _LNameUse;
		
		private string _NameUse;
		
		private string _PasswordUse;
		
		private System.Nullable<double> _PhoneUse;
		
		private string _CnicUse;
		
		private string _TypeUse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFNameUseChanging(string value);
    partial void OnFNameUseChanged();
    partial void OnLNameUseChanging(string value);
    partial void OnLNameUseChanged();
    partial void OnNameUseChanging(string value);
    partial void OnNameUseChanged();
    partial void OnPasswordUseChanging(string value);
    partial void OnPasswordUseChanged();
    partial void OnPhoneUseChanging(System.Nullable<double> value);
    partial void OnPhoneUseChanged();
    partial void OnCnicUseChanging(string value);
    partial void OnCnicUseChanged();
    partial void OnTypeUseChanging(string value);
    partial void OnTypeUseChanged();
    #endregion
		
		public TabMyUse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FNameUse", DbType="NVarChar(50)")]
		public string FNameUse
		{
			get
			{
				return this._FNameUse;
			}
			set
			{
				if ((this._FNameUse != value))
				{
					this.OnFNameUseChanging(value);
					this.SendPropertyChanging();
					this._FNameUse = value;
					this.SendPropertyChanged("FNameUse");
					this.OnFNameUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNameUse", DbType="NVarChar(50)")]
		public string LNameUse
		{
			get
			{
				return this._LNameUse;
			}
			set
			{
				if ((this._LNameUse != value))
				{
					this.OnLNameUseChanging(value);
					this.SendPropertyChanging();
					this._LNameUse = value;
					this.SendPropertyChanged("LNameUse");
					this.OnLNameUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameUse", DbType="NVarChar(50)")]
		public string NameUse
		{
			get
			{
				return this._NameUse;
			}
			set
			{
				if ((this._NameUse != value))
				{
					this.OnNameUseChanging(value);
					this.SendPropertyChanging();
					this._NameUse = value;
					this.SendPropertyChanged("NameUse");
					this.OnNameUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordUse", DbType="NVarChar(50)")]
		public string PasswordUse
		{
			get
			{
				return this._PasswordUse;
			}
			set
			{
				if ((this._PasswordUse != value))
				{
					this.OnPasswordUseChanging(value);
					this.SendPropertyChanging();
					this._PasswordUse = value;
					this.SendPropertyChanged("PasswordUse");
					this.OnPasswordUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneUse", DbType="Float")]
		public System.Nullable<double> PhoneUse
		{
			get
			{
				return this._PhoneUse;
			}
			set
			{
				if ((this._PhoneUse != value))
				{
					this.OnPhoneUseChanging(value);
					this.SendPropertyChanging();
					this._PhoneUse = value;
					this.SendPropertyChanged("PhoneUse");
					this.OnPhoneUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CnicUse", DbType="NVarChar(50)")]
		public string CnicUse
		{
			get
			{
				return this._CnicUse;
			}
			set
			{
				if ((this._CnicUse != value))
				{
					this.OnCnicUseChanging(value);
					this.SendPropertyChanging();
					this._CnicUse = value;
					this.SendPropertyChanged("CnicUse");
					this.OnCnicUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeUse", DbType="NVarChar(50)")]
		public string TypeUse
		{
			get
			{
				return this._TypeUse;
			}
			set
			{
				if ((this._TypeUse != value))
				{
					this.OnTypeUseChanging(value);
					this.SendPropertyChanging();
					this._TypeUse = value;
					this.SendPropertyChanged("TypeUse");
					this.OnTypeUseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EEmployee")]
	public partial class EEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpIds;
		
		private string _EmpFNames;
		
		private string _EmpLNames;
		
		private string _EmpUserNames;
		
		private string _EmpAdds;
		
		private string _EmpPhones;
		
		private string _EmpCnics;
		
		private string _EmpEdus;
		
		private string _EmpExps;
		
		private string _EmpDobs;
		
		private string _EmpGens;
		
		private string _EmpEmerNos;
		
		private string _EmpBloodGroups;
		
		private string _EmpMartialStatuss;
		
		private System.Nullable<double> _EmpSalary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIdsChanging(int value);
    partial void OnEmpIdsChanged();
    partial void OnEmpFNamesChanging(string value);
    partial void OnEmpFNamesChanged();
    partial void OnEmpLNamesChanging(string value);
    partial void OnEmpLNamesChanged();
    partial void OnEmpUserNamesChanging(string value);
    partial void OnEmpUserNamesChanged();
    partial void OnEmpAddsChanging(string value);
    partial void OnEmpAddsChanged();
    partial void OnEmpPhonesChanging(string value);
    partial void OnEmpPhonesChanged();
    partial void OnEmpCnicsChanging(string value);
    partial void OnEmpCnicsChanged();
    partial void OnEmpEdusChanging(string value);
    partial void OnEmpEdusChanged();
    partial void OnEmpExpsChanging(string value);
    partial void OnEmpExpsChanged();
    partial void OnEmpDobsChanging(string value);
    partial void OnEmpDobsChanged();
    partial void OnEmpGensChanging(string value);
    partial void OnEmpGensChanged();
    partial void OnEmpEmerNosChanging(string value);
    partial void OnEmpEmerNosChanged();
    partial void OnEmpBloodGroupsChanging(string value);
    partial void OnEmpBloodGroupsChanged();
    partial void OnEmpMartialStatussChanging(string value);
    partial void OnEmpMartialStatussChanged();
    partial void OnEmpSalaryChanging(System.Nullable<double> value);
    partial void OnEmpSalaryChanged();
    #endregion
		
		public EEmployee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpIds", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmpIds
		{
			get
			{
				return this._EmpIds;
			}
			set
			{
				if ((this._EmpIds != value))
				{
					this.OnEmpIdsChanging(value);
					this.SendPropertyChanging();
					this._EmpIds = value;
					this.SendPropertyChanged("EmpIds");
					this.OnEmpIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpFNames", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpFNames
		{
			get
			{
				return this._EmpFNames;
			}
			set
			{
				if ((this._EmpFNames != value))
				{
					this.OnEmpFNamesChanging(value);
					this.SendPropertyChanging();
					this._EmpFNames = value;
					this.SendPropertyChanged("EmpFNames");
					this.OnEmpFNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpLNames", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpLNames
		{
			get
			{
				return this._EmpLNames;
			}
			set
			{
				if ((this._EmpLNames != value))
				{
					this.OnEmpLNamesChanging(value);
					this.SendPropertyChanging();
					this._EmpLNames = value;
					this.SendPropertyChanged("EmpLNames");
					this.OnEmpLNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpUserNames", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpUserNames
		{
			get
			{
				return this._EmpUserNames;
			}
			set
			{
				if ((this._EmpUserNames != value))
				{
					this.OnEmpUserNamesChanging(value);
					this.SendPropertyChanging();
					this._EmpUserNames = value;
					this.SendPropertyChanged("EmpUserNames");
					this.OnEmpUserNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpAdds", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpAdds
		{
			get
			{
				return this._EmpAdds;
			}
			set
			{
				if ((this._EmpAdds != value))
				{
					this.OnEmpAddsChanging(value);
					this.SendPropertyChanging();
					this._EmpAdds = value;
					this.SendPropertyChanged("EmpAdds");
					this.OnEmpAddsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpPhones", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpPhones
		{
			get
			{
				return this._EmpPhones;
			}
			set
			{
				if ((this._EmpPhones != value))
				{
					this.OnEmpPhonesChanging(value);
					this.SendPropertyChanging();
					this._EmpPhones = value;
					this.SendPropertyChanged("EmpPhones");
					this.OnEmpPhonesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpCnics", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpCnics
		{
			get
			{
				return this._EmpCnics;
			}
			set
			{
				if ((this._EmpCnics != value))
				{
					this.OnEmpCnicsChanging(value);
					this.SendPropertyChanging();
					this._EmpCnics = value;
					this.SendPropertyChanged("EmpCnics");
					this.OnEmpCnicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpEdus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpEdus
		{
			get
			{
				return this._EmpEdus;
			}
			set
			{
				if ((this._EmpEdus != value))
				{
					this.OnEmpEdusChanging(value);
					this.SendPropertyChanging();
					this._EmpEdus = value;
					this.SendPropertyChanged("EmpEdus");
					this.OnEmpEdusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpExps", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpExps
		{
			get
			{
				return this._EmpExps;
			}
			set
			{
				if ((this._EmpExps != value))
				{
					this.OnEmpExpsChanging(value);
					this.SendPropertyChanging();
					this._EmpExps = value;
					this.SendPropertyChanged("EmpExps");
					this.OnEmpExpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpDobs", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpDobs
		{
			get
			{
				return this._EmpDobs;
			}
			set
			{
				if ((this._EmpDobs != value))
				{
					this.OnEmpDobsChanging(value);
					this.SendPropertyChanging();
					this._EmpDobs = value;
					this.SendPropertyChanged("EmpDobs");
					this.OnEmpDobsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpGens", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpGens
		{
			get
			{
				return this._EmpGens;
			}
			set
			{
				if ((this._EmpGens != value))
				{
					this.OnEmpGensChanging(value);
					this.SendPropertyChanging();
					this._EmpGens = value;
					this.SendPropertyChanged("EmpGens");
					this.OnEmpGensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpEmerNos", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpEmerNos
		{
			get
			{
				return this._EmpEmerNos;
			}
			set
			{
				if ((this._EmpEmerNos != value))
				{
					this.OnEmpEmerNosChanging(value);
					this.SendPropertyChanging();
					this._EmpEmerNos = value;
					this.SendPropertyChanged("EmpEmerNos");
					this.OnEmpEmerNosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpBloodGroups", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpBloodGroups
		{
			get
			{
				return this._EmpBloodGroups;
			}
			set
			{
				if ((this._EmpBloodGroups != value))
				{
					this.OnEmpBloodGroupsChanging(value);
					this.SendPropertyChanging();
					this._EmpBloodGroups = value;
					this.SendPropertyChanged("EmpBloodGroups");
					this.OnEmpBloodGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpMartialStatuss", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpMartialStatuss
		{
			get
			{
				return this._EmpMartialStatuss;
			}
			set
			{
				if ((this._EmpMartialStatuss != value))
				{
					this.OnEmpMartialStatussChanging(value);
					this.SendPropertyChanging();
					this._EmpMartialStatuss = value;
					this.SendPropertyChanged("EmpMartialStatuss");
					this.OnEmpMartialStatussChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpSalary", DbType="Float")]
		public System.Nullable<double> EmpSalary
		{
			get
			{
				return this._EmpSalary;
			}
			set
			{
				if ((this._EmpSalary != value))
				{
					this.OnEmpSalaryChanging(value);
					this.SendPropertyChanging();
					this._EmpSalary = value;
					this.SendPropertyChanged("EmpSalary");
					this.OnEmpSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManagementEEmployee")]
	public partial class ManagementEEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpId;
		
		private string _EmpFName;
		
		private string _EmpLName;
		
		private string _EmpUserName;
		
		private string _EmpAdd;
		
		private string _EmpWorkingPlace;
		
		private string _EmpEducation;
		
		private System.Nullable<double> _EmpPaidSalary;
		
		private string _EmpCnic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIdChanging(int value);
    partial void OnEmpIdChanged();
    partial void OnEmpFNameChanging(string value);
    partial void OnEmpFNameChanged();
    partial void OnEmpLNameChanging(string value);
    partial void OnEmpLNameChanged();
    partial void OnEmpUserNameChanging(string value);
    partial void OnEmpUserNameChanged();
    partial void OnEmpAddChanging(string value);
    partial void OnEmpAddChanged();
    partial void OnEmpWorkingPlaceChanging(string value);
    partial void OnEmpWorkingPlaceChanged();
    partial void OnEmpEducationChanging(string value);
    partial void OnEmpEducationChanged();
    partial void OnEmpPaidSalaryChanging(System.Nullable<double> value);
    partial void OnEmpPaidSalaryChanged();
    partial void OnEmpCnicChanging(string value);
    partial void OnEmpCnicChanged();
    #endregion
		
		public ManagementEEmployee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpFName", DbType="NVarChar(50)")]
		public string EmpFName
		{
			get
			{
				return this._EmpFName;
			}
			set
			{
				if ((this._EmpFName != value))
				{
					this.OnEmpFNameChanging(value);
					this.SendPropertyChanging();
					this._EmpFName = value;
					this.SendPropertyChanged("EmpFName");
					this.OnEmpFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpLName", DbType="NVarChar(50)")]
		public string EmpLName
		{
			get
			{
				return this._EmpLName;
			}
			set
			{
				if ((this._EmpLName != value))
				{
					this.OnEmpLNameChanging(value);
					this.SendPropertyChanging();
					this._EmpLName = value;
					this.SendPropertyChanged("EmpLName");
					this.OnEmpLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpUserName", DbType="NVarChar(50)")]
		public string EmpUserName
		{
			get
			{
				return this._EmpUserName;
			}
			set
			{
				if ((this._EmpUserName != value))
				{
					this.OnEmpUserNameChanging(value);
					this.SendPropertyChanging();
					this._EmpUserName = value;
					this.SendPropertyChanged("EmpUserName");
					this.OnEmpUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpAdd", DbType="NVarChar(50)")]
		public string EmpAdd
		{
			get
			{
				return this._EmpAdd;
			}
			set
			{
				if ((this._EmpAdd != value))
				{
					this.OnEmpAddChanging(value);
					this.SendPropertyChanging();
					this._EmpAdd = value;
					this.SendPropertyChanged("EmpAdd");
					this.OnEmpAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpWorkingPlace", DbType="NVarChar(50)")]
		public string EmpWorkingPlace
		{
			get
			{
				return this._EmpWorkingPlace;
			}
			set
			{
				if ((this._EmpWorkingPlace != value))
				{
					this.OnEmpWorkingPlaceChanging(value);
					this.SendPropertyChanging();
					this._EmpWorkingPlace = value;
					this.SendPropertyChanged("EmpWorkingPlace");
					this.OnEmpWorkingPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpEducation", DbType="NVarChar(50)")]
		public string EmpEducation
		{
			get
			{
				return this._EmpEducation;
			}
			set
			{
				if ((this._EmpEducation != value))
				{
					this.OnEmpEducationChanging(value);
					this.SendPropertyChanging();
					this._EmpEducation = value;
					this.SendPropertyChanged("EmpEducation");
					this.OnEmpEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpPaidSalary", DbType="Float")]
		public System.Nullable<double> EmpPaidSalary
		{
			get
			{
				return this._EmpPaidSalary;
			}
			set
			{
				if ((this._EmpPaidSalary != value))
				{
					this.OnEmpPaidSalaryChanging(value);
					this.SendPropertyChanging();
					this._EmpPaidSalary = value;
					this.SendPropertyChanged("EmpPaidSalary");
					this.OnEmpPaidSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpCnic", DbType="NVarChar(50)")]
		public string EmpCnic
		{
			get
			{
				return this._EmpCnic;
			}
			set
			{
				if ((this._EmpCnic != value))
				{
					this.OnEmpCnicChanging(value);
					this.SendPropertyChanging();
					this._EmpCnic = value;
					this.SendPropertyChanged("EmpCnic");
					this.OnEmpCnicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Labour")]
	public partial class Labour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabourID;
		
		private System.Nullable<double> _LabourCNIC;
		
		private string _LabourName;
		
		private string _LabourAddress;
		
		private System.Nullable<double> _LabourPhonen;
		
		private System.Nullable<double> _LabourSalary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabourIDChanging(int value);
    partial void OnLabourIDChanged();
    partial void OnLabourCNICChanging(System.Nullable<double> value);
    partial void OnLabourCNICChanged();
    partial void OnLabourNameChanging(string value);
    partial void OnLabourNameChanged();
    partial void OnLabourAddressChanging(string value);
    partial void OnLabourAddressChanged();
    partial void OnLabourPhonenChanging(System.Nullable<double> value);
    partial void OnLabourPhonenChanged();
    partial void OnLabourSalaryChanging(System.Nullable<double> value);
    partial void OnLabourSalaryChanged();
    #endregion
		
		public Labour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LabourID
		{
			get
			{
				return this._LabourID;
			}
			set
			{
				if ((this._LabourID != value))
				{
					this.OnLabourIDChanging(value);
					this.SendPropertyChanging();
					this._LabourID = value;
					this.SendPropertyChanged("LabourID");
					this.OnLabourIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourCNIC", DbType="Float")]
		public System.Nullable<double> LabourCNIC
		{
			get
			{
				return this._LabourCNIC;
			}
			set
			{
				if ((this._LabourCNIC != value))
				{
					this.OnLabourCNICChanging(value);
					this.SendPropertyChanging();
					this._LabourCNIC = value;
					this.SendPropertyChanged("LabourCNIC");
					this.OnLabourCNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourName", DbType="NVarChar(50)")]
		public string LabourName
		{
			get
			{
				return this._LabourName;
			}
			set
			{
				if ((this._LabourName != value))
				{
					this.OnLabourNameChanging(value);
					this.SendPropertyChanging();
					this._LabourName = value;
					this.SendPropertyChanged("LabourName");
					this.OnLabourNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourAddress", DbType="NVarChar(50)")]
		public string LabourAddress
		{
			get
			{
				return this._LabourAddress;
			}
			set
			{
				if ((this._LabourAddress != value))
				{
					this.OnLabourAddressChanging(value);
					this.SendPropertyChanging();
					this._LabourAddress = value;
					this.SendPropertyChanged("LabourAddress");
					this.OnLabourAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourPhonen", DbType="Float")]
		public System.Nullable<double> LabourPhonen
		{
			get
			{
				return this._LabourPhonen;
			}
			set
			{
				if ((this._LabourPhonen != value))
				{
					this.OnLabourPhonenChanging(value);
					this.SendPropertyChanging();
					this._LabourPhonen = value;
					this.SendPropertyChanged("LabourPhonen");
					this.OnLabourPhonenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourSalary", DbType="Float")]
		public System.Nullable<double> LabourSalary
		{
			get
			{
				return this._LabourSalary;
			}
			set
			{
				if ((this._LabourSalary != value))
				{
					this.OnLabourSalaryChanging(value);
					this.SendPropertyChanging();
					this._LabourSalary = value;
					this.SendPropertyChanged("LabourSalary");
					this.OnLabourSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManagementLLabour")]
	public partial class ManagementLLabour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabourID;
		
		private System.Nullable<double> _LabourCNIC;
		
		private string _LabourName;
		
		private string _LabourAddress;
		
		private System.Nullable<double> _LabourPhonen;
		
		private System.Nullable<double> _LabourPaidSalary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabourIDChanging(int value);
    partial void OnLabourIDChanged();
    partial void OnLabourCNICChanging(System.Nullable<double> value);
    partial void OnLabourCNICChanged();
    partial void OnLabourNameChanging(string value);
    partial void OnLabourNameChanged();
    partial void OnLabourAddressChanging(string value);
    partial void OnLabourAddressChanged();
    partial void OnLabourPhonenChanging(System.Nullable<double> value);
    partial void OnLabourPhonenChanged();
    partial void OnLabourPaidSalaryChanging(System.Nullable<double> value);
    partial void OnLabourPaidSalaryChanged();
    #endregion
		
		public ManagementLLabour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LabourID
		{
			get
			{
				return this._LabourID;
			}
			set
			{
				if ((this._LabourID != value))
				{
					this.OnLabourIDChanging(value);
					this.SendPropertyChanging();
					this._LabourID = value;
					this.SendPropertyChanged("LabourID");
					this.OnLabourIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourCNIC", DbType="Float")]
		public System.Nullable<double> LabourCNIC
		{
			get
			{
				return this._LabourCNIC;
			}
			set
			{
				if ((this._LabourCNIC != value))
				{
					this.OnLabourCNICChanging(value);
					this.SendPropertyChanging();
					this._LabourCNIC = value;
					this.SendPropertyChanged("LabourCNIC");
					this.OnLabourCNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourName", DbType="NVarChar(50)")]
		public string LabourName
		{
			get
			{
				return this._LabourName;
			}
			set
			{
				if ((this._LabourName != value))
				{
					this.OnLabourNameChanging(value);
					this.SendPropertyChanging();
					this._LabourName = value;
					this.SendPropertyChanged("LabourName");
					this.OnLabourNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourAddress", DbType="NVarChar(50)")]
		public string LabourAddress
		{
			get
			{
				return this._LabourAddress;
			}
			set
			{
				if ((this._LabourAddress != value))
				{
					this.OnLabourAddressChanging(value);
					this.SendPropertyChanging();
					this._LabourAddress = value;
					this.SendPropertyChanged("LabourAddress");
					this.OnLabourAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourPhonen", DbType="Float")]
		public System.Nullable<double> LabourPhonen
		{
			get
			{
				return this._LabourPhonen;
			}
			set
			{
				if ((this._LabourPhonen != value))
				{
					this.OnLabourPhonenChanging(value);
					this.SendPropertyChanging();
					this._LabourPhonen = value;
					this.SendPropertyChanged("LabourPhonen");
					this.OnLabourPhonenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourPaidSalary", DbType="Float")]
		public System.Nullable<double> LabourPaidSalary
		{
			get
			{
				return this._LabourPaidSalary;
			}
			set
			{
				if ((this._LabourPaidSalary != value))
				{
					this.OnLabourPaidSalaryChanging(value);
					this.SendPropertyChanging();
					this._LabourPaidSalary = value;
					this.SendPropertyChanged("LabourPaidSalary");
					this.OnLabourPaidSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabMyCus")]
	public partial class TabMyCus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCus;
		
		private System.Nullable<double> _CnicCus;
		
		private string _NameCus;
		
		private string _AddressCus;
		
		private System.Nullable<double> _PhoneCus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCusChanging(int value);
    partial void OnIDCusChanged();
    partial void OnCnicCusChanging(System.Nullable<double> value);
    partial void OnCnicCusChanged();
    partial void OnNameCusChanging(string value);
    partial void OnNameCusChanged();
    partial void OnAddressCusChanging(string value);
    partial void OnAddressCusChanged();
    partial void OnPhoneCusChanging(System.Nullable<double> value);
    partial void OnPhoneCusChanged();
    #endregion
		
		public TabMyCus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCus", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCus
		{
			get
			{
				return this._IDCus;
			}
			set
			{
				if ((this._IDCus != value))
				{
					this.OnIDCusChanging(value);
					this.SendPropertyChanging();
					this._IDCus = value;
					this.SendPropertyChanged("IDCus");
					this.OnIDCusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CnicCus", DbType="Float")]
		public System.Nullable<double> CnicCus
		{
			get
			{
				return this._CnicCus;
			}
			set
			{
				if ((this._CnicCus != value))
				{
					this.OnCnicCusChanging(value);
					this.SendPropertyChanging();
					this._CnicCus = value;
					this.SendPropertyChanged("CnicCus");
					this.OnCnicCusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCus", DbType="NVarChar(50)")]
		public string NameCus
		{
			get
			{
				return this._NameCus;
			}
			set
			{
				if ((this._NameCus != value))
				{
					this.OnNameCusChanging(value);
					this.SendPropertyChanging();
					this._NameCus = value;
					this.SendPropertyChanged("NameCus");
					this.OnNameCusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressCus", DbType="NVarChar(50)")]
		public string AddressCus
		{
			get
			{
				return this._AddressCus;
			}
			set
			{
				if ((this._AddressCus != value))
				{
					this.OnAddressCusChanging(value);
					this.SendPropertyChanging();
					this._AddressCus = value;
					this.SendPropertyChanged("AddressCus");
					this.OnAddressCusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCus", DbType="Float")]
		public System.Nullable<double> PhoneCus
		{
			get
			{
				return this._PhoneCus;
			}
			set
			{
				if ((this._PhoneCus != value))
				{
					this.OnPhoneCusChanging(value);
					this.SendPropertyChanging();
					this._PhoneCus = value;
					this.SendPropertyChanged("PhoneCus");
					this.OnPhoneCusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
